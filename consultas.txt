1) Crea DB.

use ecommerce

2) Crear collection productos y mensajes.

db.createCollection("productos")

db.createCollection("mensajes")

3) Agregar 10 documentos a la colecction productos y mensajes.

db.productos.insertMany([
	{ title: "producto 1", value: 300 },
	{ title: "producto 2", value: 500 },
	{ title: "producto 3", value: 600 },
	{ title: "producto 4", value: 700 },
	{ title: "producto 5", value: 1000 },
	{ title: "producto 6", value: 1520 },
	{ title: "producto 7", value: 2310 },
	{ title: "producto 8", value: 950 },
	{ title: "producto 9", value: 4300 },
	{ title: "producto 10", value: 1890 }
	])

db.mensajes.insertMany([
	{ email: "email1@text.com", time: "21-11-2022 15:17:40", messsage: "text1" },
	{ email: "email2@text.com", time: "21-11-2022 15:17:41", messsage: "text2" },
	{ email: "email3@text.com", time: "21-11-2022 15:18:42", messsage: "text3" },
	{ email: "email4@text.com", time: "21-11-2022 15:18:43", messsage: "text4" },
	{ email: "email5@text.com", time: "21-11-2022 15:19:44", messsage: "text5" },
	{ email: "email6@text.com", time: "21-11-2022 15:20:45", messsage: "text6" },
	{ email: "email7@text.com", time: "21-11-2022 15:20:46", messsage: "text7" },
	{ email: "email8@text.com", time: "21-11-2022 15:20:47", messsage: "text8" },
	{ email: "email9@text.com", time: "21-11-2022 15:20:48", messsage: "text9" },
	{ email: "email10@text.com", time: "21-11-2022 15:21:49", messsage: "text10" }
	])

4) Listar todos los documentos de la colección productos y mensajes.

db.productos.find()

db.mensajes.find()

5) Cantidad de documentos en ambas colecciones.

db.productos.countDocuments()

db.mensajes.countDocuments()

6) Agregar documento a productos.

db.productos.insertOne({ title: "producto 11", value: 4030 })

7) Hacer consulta para encontrar un producto con nombre especifico (title).

db.productos.find({title: "producto 2"})

8) Buscar productos con valor menor a 1000.

db.productos.find({value: {$lt:1000}})

9) Buscar productos con valor entre 600 y 3000.

db.productos.find(
  { 
    $and: 
      [ 
        {value: {$gte: 6000}}, 
        {value: {$lte: 3000}} 
      ] 
  }
)

10) Buscar productos con valor mayor a 2500.

db.productos.find({value: {$gt:3000}})

11) Realizar una consulta que traiga sólo el nombre del tercer producto más barato.

db.productos.find({}, {"title": 1}).sort({"value": 1}).limit(1).skip(2)

12) Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.

db.productos.update({},{$set:{"stock": 100}},{upsert:false,multi:true})

13) Cambiar el stock a cero de los productos con precios mayores a 3000.

db.productos.updateMany({value: {$gt:3000}},{$set:{"stock": 0}},{upsert:false,multi:true})

14) Borrar los productos con precio menor a 2000.

db.productos.deleteMany({value: {$lt: 2000}})

15) Crear un usuario: 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce.

db.createUser(
  {
    user: "pepe",
    pwd: "asd456",
    roles: [
       { role: "read", db: "ecommerce" }
    ]
  }
)

16) Verificar que pepe no pueda cambiar la información.

db.productos.deleteOne({"title": "producto 7"})
